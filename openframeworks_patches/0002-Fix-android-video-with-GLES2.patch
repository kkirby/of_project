From 315191131a95aa931c1f85bd2f7d18e74d0749cd Mon Sep 17 00:00:00 2001
From: Kyle Kirbatski <kkirbatski@someplace.com>
Date: Mon, 7 Dec 2015 15:51:13 -0600
Subject: [PATCH] Fix android video with GLES2+

---
 addons/ofxAndroid/src/ofxAndroidVideoGrabber.cpp | 86 +++++++++---------------
 addons/ofxAndroid/src/ofxAndroidVideoGrabber.h   | 27 +++++++-
 2 files changed, 58 insertions(+), 55 deletions(-)

diff --git a/addons/ofxAndroid/src/ofxAndroidVideoGrabber.cpp b/addons/ofxAndroid/src/ofxAndroidVideoGrabber.cpp
index 649ba3c..7ad26c3 100644
--- a/addons/ofxAndroid/src/ofxAndroidVideoGrabber.cpp
+++ b/addons/ofxAndroid/src/ofxAndroidVideoGrabber.cpp
@@ -12,29 +12,6 @@
 #include "ofUtils.h"
 #include "ofVideoGrabber.h"
 
-struct ofxAndroidVideoGrabber::Data{
-	bool bIsFrameNew;
-	bool bGrabberInited;
-	bool bUsePixels;
-	int width;
-	int height;
-	ofPixelFormat internalPixelFormat;
-	bool bNewBackFrame;
-	ofPixels frontBuffer, backBuffer;
-	ofTexture texture;
-	jfloatArray matrixJava;
-	int cameraId;
-	bool appPaused;
-	bool newPixels;
-	int attemptFramerate;
-	jobject javaVideoGrabber;
-
-	Data();
-	~Data();
-	void onAppPause();
-	void onAppResume();
-	void loadTexture();
-};
 
 map<int,weak_ptr<ofxAndroidVideoGrabber::Data>> & instances(){
 	static auto * instances = new map<int,weak_ptr<ofxAndroidVideoGrabber::Data>>;
@@ -110,22 +87,34 @@ ofxAndroidVideoGrabber::Data::~Data(){
 }
 
 void ofxAndroidVideoGrabber::Data::loadTexture(){
+	ofTextureData td;
+	GLuint texId[1];
+	glGenTextures(1, texId);
+
+	glEnable(GL_TEXTURE_EXTERNAL_OES);
+	glBindTexture(GL_TEXTURE_EXTERNAL_OES, texId[0]);
+
+	glTexParameterf(GL_TEXTURE_EXTERNAL_OES, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
+	glTexParameterf(GL_TEXTURE_EXTERNAL_OES, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
+	glTexParameterf(GL_TEXTURE_EXTERNAL_OES, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE);
+	glTexParameterf(GL_TEXTURE_EXTERNAL_OES, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE);
+	if (!ofIsGLProgrammableRenderer()) {
+		glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE);
+	}
 
-	if(!texture.texData.bAllocated) return;
-
-	glGenTextures(1, (GLuint *)&texture.texData.textureID);
-
-	glEnable(texture.texData.textureTarget);
-
-	glBindTexture(texture.texData.textureTarget, (GLuint)texture.texData.textureID);
+	glDisable(GL_TEXTURE_EXTERNAL_OES);
 
-	glTexParameterf(texture.texData.textureTarget, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
-	glTexParameterf(texture.texData.textureTarget, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
-	glTexParameterf(texture.texData.textureTarget, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE);
-	glTexParameterf(texture.texData.textureTarget, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE);
-	glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE);
+	// Set the externally created texture reference
+	texture.setUseExternalTextureID(texId[0]);
+	texture.texData.width = width;
+	texture.texData.height = height;
+	texture.texData.tex_w = width;
+	texture.texData.tex_h = height;
+	texture.texData.tex_t = 1; // Hack!
+	texture.texData.tex_u = 1;
+	texture.texData.textureTarget = GL_TEXTURE_EXTERNAL_OES;
+	texture.texData.glInternalFormat = GL_RGBA;
 
-	glDisable(texture.texData.textureTarget);
 
 }
 
@@ -217,8 +206,8 @@ void ofxAndroidVideoGrabber::update(){
 		jfloat * m = ofGetJNIEnv()->GetFloatArrayElements(data->matrixJava,0);
 
 		ofMatrix4x4 vFlipTextureMatrix;
-		vFlipTextureMatrix.scale(1,-1,1);
-		vFlipTextureMatrix.translate(0,1,0);
+		vFlipTextureMatrix.scale(-1,-1,1);
+		vFlipTextureMatrix.translate(1,1,0);
 		ofMatrix4x4 textureMatrix(m);
 		data->texture.setTextureMatrix(vFlipTextureMatrix * textureMatrix );
 
@@ -229,6 +218,9 @@ void ofxAndroidVideoGrabber::update(){
 }
 
 void ofxAndroidVideoGrabber::close(){
+	// Release texture
+	glDeleteTextures(1, &data->texture.texData.textureID);
+
     JNIEnv *env = ofGetJNIEnv();
     jclass javaClass = getJavaClass();
     jmethodID javaCloseGrabber = env->GetMethodID(javaClass,"close","()V");
@@ -271,23 +263,11 @@ bool ofxAndroidVideoGrabber::setup(int w, int h){
 	}
 
 	ofLogNotice() << "initializing camera with external texture";
-	ofTextureData td;
-	td.width = w;
-	td.height = h;
-	td.tex_w = td.width;
-	td.tex_h = td.height;
-	td.tex_t = 1; // Hack!
-	td.tex_u = 1;
-	td.textureTarget = GL_TEXTURE_EXTERNAL_OES;
-	td.glInternalFormat = GL_RGBA;
-	td.bFlipTexture = false;
-
-	// hack to initialize gl resources from outside ofTexture
-	data->texture.texData = td;
-	data->texture.texData.bAllocated = true;
-	data->loadTexture();
+
+	// Load opengl texture
 	data->width = w;
 	data->height = h;
+	data->loadTexture();
 
 	bool bInit = initCamera();
 	if(!bInit) return false;
diff --git a/addons/ofxAndroid/src/ofxAndroidVideoGrabber.h b/addons/ofxAndroid/src/ofxAndroidVideoGrabber.h
index 6b0809f..d3a5486 100644
--- a/addons/ofxAndroid/src/ofxAndroidVideoGrabber.h
+++ b/addons/ofxAndroid/src/ofxAndroidVideoGrabber.h
@@ -79,7 +79,31 @@ public:
 
 	bool supportsTextureRendering();
 
-	struct Data;
+	struct Data {
+		bool bIsFrameNew;
+		bool bGrabberInited;
+		bool bUsePixels;
+		int width;
+		int height;
+		ofPixelFormat internalPixelFormat;
+		bool bNewBackFrame;
+		ofPixels frontBuffer, backBuffer;
+		ofTexture texture;
+		jfloatArray matrixJava;
+		int cameraId;
+		bool appPaused;
+		bool newPixels;
+		int attemptFramerate;
+		jobject javaVideoGrabber;
+
+		Data();
+		~Data();
+		void onAppPause();
+		void onAppResume();
+		void loadTexture();
+	};
+	
+	shared_ptr<Data> data;
 private:
 	int getCameraFacing(int facing)const;
 
@@ -90,5 +114,4 @@ private:
 
 	// only to be used internally to resize;
 	ofPixelsRef getAuxBuffer();
-	shared_ptr<Data> data;
 };
-- 
2.4.9 (Apple Git-60)

